const compose = (f, g) => (x) => f(g(x))

const head = (x) => x[0]

const reverse = xs => xs.reverse()

const last = compose(head, reverse)

const list = [
  'HousingAnywhere', 
  'JavaScript team', 
  'Rocks',
]
 
last(list) //=> 'Rocks'

head(reverse(list)) //=> 'Rocks'

reverse(head(list)) //=> throws

const pipe = (f, g) => (x) => g(f(x))

const last = pipe(reverse, head)

last(list) //=> 'Rocks'
